<!DOCTYPE html>
<html>
  <head>
    <title>SC2 Mafia</title>
    <link rel="icon" href="/static/images/favicon.ico">
    <link rel="stylesheet" href="/static/css/base.css">
    <link rel="stylesheet" href="/static/css/room.css">
  </head>
  <body>
    <header>
      <nav>
        <a href="/lobby" rel="home">
          <img src="/static/images/logo.png" alt="logo" id="logo">
          <h1>SC2 Mafia</h1>
        </a>
        <ul>
          <li><a href="/about" rel="about">소개</a></li>
          <li><a href="/lobby" rel="lobby">로비</a></li>
          <li><a href="/archive" rel="archive">기록실</a></li>
        </ul>
      </nav>
    </header>
    <form class="" action="/lobby" method="get">
      <button type="submit" name="button">나가기</button>
    </form>
    <section class="main">
      <ul id="messages"></ul>
      <form onsubmit="send_message(event);" class="message_input_form">
        <input id="chat" autocomplete="off" placeholder="여기에 할말 입력"/><button class="send_message_button">전송</button>
      </form>
    </section>
  </body>
  <script src="/static/js/socket.io.js" charset="utf-8"></script>
  <script type="text/javascript">
    'use strict';
    const Socket = io.connect('http://localhost:8090');
    let chatLog = document.getElementById('messages');

    function updateScroll () {
      let chatBox = document.querySelector('#messages');
      chatBox.scrollTop = chatBox.scrollHeight;
    }

    Socket.emit('enter_GameRoom', {
      'roomID': {{roomID}},
    })

    Socket.on('notification', (data)=> {
      let chat = document.createElement("li");
      switch (data['type']) {
        case 'enter':
          chat.innerHTML = data['who']+'님이 입장했습니다.';
          chatLog.appendChild(chat);
          break;
        case 'leave':
          chat.innerHTML = data['who']+'님이 퇴장했습니다.';
          chatLog.appendChild(chat);
          break;
        case 'newhost':
          chat.innerHTML = data['who']+'님이 방장이 되었습니다.';
          chatLog.appendChild(chat);
          break;
        default:
          console.log(data);
      }
      updateScroll();
    });

    Socket.on('message', (data)=> {
      console.log(data);
      let chat = document.createElement("li");
      chat.innerHTML = data['who']+': '+data['message'];
      chatLog.appendChild(chat);
      updateScroll();
    });

    Socket.on('event', (data)=> {
      console.log(data);
      let chat = document.createElement("li");
      switch (data['type']) {
        case 'role':
          let role = data['role'];
          chat.innerHTML = '당신의 직업은 '+role+'입니다.';
          chatLog.appendChild(chat);
          break;
        default:
      }
    });

    function send_message(event) {
      event.preventDefault();
      let chatInput = document.querySelector('#chat')
      let message = chatInput.value;
      Socket.emit('message', message);
      chatInput.value = '';
    };
  </script>
</html>
